{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/yurastriuchkov/Sites/fin/client/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-[data-slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/yurastriuchkov/Sites/fin/client/src/lib/api.ts"],"sourcesContent":["const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5002';\n\ninterface User {\n  id: string; // e.g., C123456789\n  name: string;\n  email: string;\n  pets?: string[]; // Array of Pet _ids\n}\n\ninterface Pet {\n  id: string; // e.g., P987654321\n  name: string;\n  species: string;\n  owners?: string[]; // Array of User _ids\n}\n\nexport async function fetchUsers(): Promise<User[]> {\n  const res = await fetch(`${API_BASE_URL}/api/users`, {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  if (!res.ok) throw new Error('Failed to fetch users');\n  return res.json();\n}\n\nexport async function createUser(data: {\n  name: string;\n  email: string;\n  password: string;\n}): Promise<User> {\n  const res = await fetch(`${API_BASE_URL}/api/users`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  if (!res.ok) throw new Error('Failed to create user');\n  return res.json();\n}\n\nexport async function fetchPets(): Promise<Pet[]> {\n  const res = await fetch(`${API_BASE_URL}/api/pets`, {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  if (!res.ok) throw new Error('Failed to fetch pets');\n  return res.json();\n}\n\nexport async function createPet(data: {\n  name: string;\n  species: string;\n  ownerIds: string[];\n}): Promise<Pet> {\n  const res = await fetch(`${API_BASE_URL}/api/pets`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n  if (!res.ok) throw new Error('Failed to create pet');\n  return res.json();\n}"],"names":[],"mappings":";;;;;;AAAA,MAAM,eAAe,6DAAmC;AAgBjD,eAAe;IACpB,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,UAAU,CAAC,EAAE;QACnD,SAAS;YAAE,gBAAgB;QAAmB;IAChD;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,IAAI,IAAI;AACjB;AAEO,eAAe,WAAW,IAIhC;IACC,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,UAAU,CAAC,EAAE;QACnD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,IAAI,IAAI;AACjB;AAEO,eAAe;IACpB,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC,EAAE;QAClD,SAAS;YAAE,gBAAgB;QAAmB;IAChD;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,IAAI,IAAI;AACjB;AAEO,eAAe,UAAU,IAI/B;IACC,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC,EAAE;QAClD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,IAAI,IAAI;AACjB","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/yurastriuchkov/Sites/fin/client/src/app/clients/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { fetchUsers, createUser } from '@/lib/api';\nimport { SignedIn, SignedOut } from '@clerk/nextjs';\n\n// Define User type (consistent with /lib/api.ts)\ninterface User {\n  _id?: string; // MongoDB ID from backend\n  name: string;\n  email: string;\n  clerkId?: string; // Optional if synced from Clerk\n}\n\nexport default function UsersPage() {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({ name: '', email: '', password: '' });\n\n  useEffect(() => {\n    async function loadUsers() {\n      try {\n        const data = await fetchUsers();\n        setUsers(data);\n      } catch (error) {\n        console.error('Failed to fetch users:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadUsers();\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const newUser = await createUser(formData);\n      setUsers([...users, newUser]);\n      setFormData({ name: '', email: '', password: '' });\n    } catch (error) {\n      console.error('Failed to create user:', error);\n    }\n  };\n\n  if (loading) return <p className=\"text-center\">Loading...</p>;\n\n  return (\n    <>\n      <SignedIn>\n        <div className=\"container mx-auto p-4\">\n          <h1 className=\"text-3xl font-bold mb-6\">User Management</h1>\n\n          {/* Form to Add User */}\n          <Card className=\"mb-6\">\n            <CardHeader>\n              <CardTitle>Add New User</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <Input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  value={formData.name}\n                  onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                />\n                <Input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={formData.email}\n                  onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                />\n                <Input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={formData.password}\n                  onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                />\n                <Button type=\"submit\">Add User</Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          {/* User List */}\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {users.map((user) => (\n              <Card key={user._id || user.email}>\n                <CardHeader>\n                  <CardTitle>{user.name}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p>{user.email}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </SignedIn>\n      <SignedOut>\n        <div className=\"container mx-auto p-4\">\n          <h1 className=\"text-3xl font-bold\">Please Sign In</h1>\n          <p>You need to be signed in to manage users.</p>\n        </div>\n      </SignedOut>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}